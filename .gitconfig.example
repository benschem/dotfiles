[color]
  branch = auto       # enable color in branch output when running in a terminal
  diff = auto         # colorize diffs for easier identification of changes
  interactive = auto  # add color to prompts during interactive commands
  status = auto       # colorize git status output for better readability
  ui = auto           # general UI coloring to improve overall output clarity

  # Options: auto / always / never
  # auto enables color if output is a terminal and disables if not

[color "branch"]
  current = green bold
  remote = yellow

[core]
  # pager = less -FRX # https://stackoverflow.com/questions/2183900/how-do-i-prevent-git-diff-from-using-a-pager
  pager = delta
  editor = code --wait

  # global .gitignore file that will apply automatically to all repos
	excludesfile = /Users/Ben/.gitignore

[delta]
  navigate = true # use n and N to move between diff sections
  dark = true # or light = true, or omit for auto-detection
  line-numbers = true
	side-by-side = true
  syntax-theme = Dracula
  line-numbers-left-format = "{nm:>4}│"
  line-numbers-right-format = "{np:>4}│"

[merge]
    conflictstyle = zdiff3

[interactive]
    diffFilter = delta --color-only

[alias]
  # Clean merged branches (adapted from https://stackoverflow.com/a/6127884/14870317)
  sweep = !git branch --merged $(git defaultBranch) | grep -E -v ' (master|main)$' | xargs -r git branch -d && git remote prune origin

  # Use uncommit only if you haven’t pushed.
  uncommit = reset --soft HEAD~1    # Undo the last commit but keep changes staged.

  # Once it’s on a shared branch, rewriting history is going to affect teammates.
  # Look up `git revert HEAD` instead.

  # Necessary for scripting Git operations that rely on the remote's default branch
  defaultBranch = !git symbolic-ref refs/remotes/origin/HEAD | cut -d'/' -f4  ## Get default branch name (copied from https://stackoverflow.com/a/67672350/14870317)
  remoteSetHead = remote set-head origin --auto ## Set remotes/origin/HEAD -> defaultBranch (copied from https://stackoverflow.com/a/67672350/14870317)


[help]
  autocorrect = 2 # Correct with no delay

[push]
  # Avoid enabling these if you have deploy remotes like staging or production
  # autoSetupRemote = true    # automatically sets upstream on each push to whichever remote was pushed to
  # default = simple          # pushes upstream without needing to type remote/branch
  # Better to be explicit:
  #   git push --set-upstream origin main
  # Then plain `git push` only pushes to the origin remote, never staging or production

[pull]
  rebase = true # Rebase (instead of merge) on pull to keep git history cleaner

[init]
	defaultBranch = main

# My Github identity
# Comment this out to disable pull and push from this account
# REMINDER: comment this out on the work machine
[user]
	email = benschembri@gmail.com
	name = Ben Schembri

[diff]
	tool = code
